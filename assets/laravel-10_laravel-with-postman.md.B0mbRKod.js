import{_ as s,c as e,o as i,a3 as n}from"./chunks/framework.6lXVJCTK.js";const t="/laravuel-apispa/assets/create-collection.Bs7ziyzl.jpg",o="/laravuel-apispa/assets/gear.CMKsjLqg.jpg",r="/laravuel-apispa/assets/surprise1.BtWJnsOn.jpg",l="/laravuel-apispa/assets/surprise2.CBx3pFer.jpg",p="/laravuel-apispa/assets/pre-request.BjltNo0V.jpg",c="/laravuel-apispa/assets/csrf-cookie.C5wyWEFu.jpg",d="/laravuel-apispa/assets/xxsrftoken.BK7Uoywp.jpg",h="/laravuel-apispa/assets/unauthenticated.DKF08ac8.jpg",u="/laravuel-apispa/assets/cookies.ClCjK8l7.jpg",a="/laravuel-apispa/assets/localhostport.DJKIOIcE.jpg",k="/laravuel-apispa/assets/envname.D5A-v6T2.jpg",g="/laravuel-apispa/assets/logout.DzhZXNfv.jpg",P=JSON.parse('{"title":"Laravel Sanctum (Airlock) con Postman","description":"","frontmatter":{},"headers":[],"relativePath":"laravel-10/laravel-with-postman.md","filePath":"laravel-10/laravel-with-postman.md"}'),m={name:"laravel-10/laravel-with-postman.md"},E=n('<h1 id="laravel-sanctum-airlock-con-postman" tabindex="-1">Laravel Sanctum (Airlock) con Postman <a class="header-anchor" href="#laravel-sanctum-airlock-con-postman" aria-label="Permalink to &quot;Laravel Sanctum (Airlock) con Postman&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">Prueba</p><p>Esta lección en <a href="https://blog.codecourse.com/laravel-sanctum-airlock-with-postman/" target="_blank" rel="noreferrer">idioma original</a></p></div><p>Recuerda que estás usando Laravel como una API. Y para probarlo con Postman, esto requiere un poco más de trabajo que simplemente adjuntar un token (a menos que esté utilizando autenticación basada en token con Sanctum).</p><p>Si está creando un SPA y quiere probar sus terminales con autenticación basada en cookies en Postman, aquí le mostramos cómo hacerlo.</p><h2 id="la-esencia-de-esto" tabindex="-1">La esencia de esto <a class="header-anchor" href="#la-esencia-de-esto" aria-label="Permalink to &quot;La esencia de esto&quot;">​</a></h2><p>Debido a que Sanctum utiliza la autenticación basada en cookies y llega a puntos finales protegidos por CSRF como <code>/login</code> y <code>/logout</code>, debemos asegurarnos de que estamos enviando un token CSRF con Postman. Obtenemos esto enviando una solicitud a <code>/sanctum/csrf-cookie</code> primero. También tendremos que asegurarnos de que el <code>Referrer</code> se envíe correctamente para futuras solicitudes de Sanctum para permitirlos.</p><p>Estamos probando esto con un <a href="./../laravel-10/setup-laravel-api.html">Proyecto Laravel correctamente configurado con Sanctum</a>, que permite solicitudes de localhost, en términos de dominios CORS y Sanctum.</p><h2 id="crear-una-coleccion-de-postman" tabindex="-1">Crear una Colección de Postman <a class="header-anchor" href="#crear-una-coleccion-de-postman" aria-label="Permalink to &quot;Crear una Colección de Postman&quot;">​</a></h2><p>Recomendamos crear una colección de Postman para que podamos aplicar nuestro script de solicitud previa (en un momento) a todos los puntos finales.</p><p><img src="'+t+'" alt="Create collection"></p><p>Una vez que se crea la colección, esto facilita la aplicación de un script de solicitud previa a todos los puntos finales de esa colección. También ayuda a mantener todo limpio y ordenado.</p><h2 id="crea-un-ambiente" tabindex="-1">Crea un ambiente <a class="header-anchor" href="#crea-un-ambiente" aria-label="Permalink to &quot;Crea un ambiente&quot;">​</a></h2><p>Vamos a configurar un token CSRF en nuestras variables de entorno en Postman, por lo que debemos crear un entorno de Postman.</p><p>Haga clic en la rueda dentada en la parte superior derecha de Postman, haga clic en Agregar y asigne un nombre a su entorno (el mío <code>Api-test</code>). Haga clic en Agregar nuevamente y cambie a su entorno en la parte superior derecha (vea la parte superior derecha de la captura de pantalla).</p><p><img src="'+o+'" alt="login"></p><h2 id="agregar-un-script-de-solicitud-previa" tabindex="-1">Agregar un script de solicitud previa <a class="header-anchor" href="#agregar-un-script-de-solicitud-previa" aria-label="Permalink to &quot;Agregar un script de solicitud previa&quot;">​</a></h2><p>Antes de realizar alguna solicitud, cree una nueva solicitud para <code>/login</code> en Postman, guárdela en su colección y agregue los datos del formulario (email y password).</p><p><img src="'+r+'" alt="login"></p><p>Pero, antes agregue un encabezado <code>Accept</code> con <code>application/json</code> también, para recuperar JSON.</p><p><img src="'+l+'" alt="login"></p><p>No es de extrañar aquí, recibimos un error de discrepancia de token CSRF.</p><p>Entonces, agreguemos ese <code>Pre-request Scripts</code> para tomar el token CSRF usando Sanctum, configurando el valor en nuestras variables de entorno de Postman.</p><p>Edite su colección y cambie a la pestaña <code>Pre-request Scripts</code> y agregue lo siguiente.</p><p><img src="'+p+`" alt="Pre request"></p><p>No lo escriba desde la captura de pantalla, cópielo desde aquí:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost:8000/sanctum/csrf-cookie&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;GET&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cookies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pm.environment.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xsrf-token&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cookies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;XSRF-TOKEN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Haz click en <code>Save</code> y eso se guardará.</p><p>Ahora haga otra solicitud a <code>/login</code>. Esta vez, se ejecutará <code>Pre-request Scripts</code> y establecerá la cookie que obtenemos del punto final <code>/sanctum/csrf-cookie</code> en nuestro entorno.</p><p>Presiona el ícono del ojo en la parte superior derecha para verificar.</p><p><img src="`+c+'" alt="Csrf cookie"></p><p>Genial, ese es nuestro valor de token CSRF.</p><p>Ahora actualice la solicitud <code>/login</code> para agregar el encabezado <code>X-XSRF-TOKEN</code> con el valor:</p><p><strong>{ { xsrf - token } }</strong></p><p>(este es el valor de nuestra variable de entorno) y envíe la solicitud nuevamente.</p><p><img src="'+d+'" alt="X xsrf token"></p><p>Asegúrese de no incluir espacios entre las llaves (por ejemplo, <strong>{ { xsrf - token } }</strong>). A Postman no le gusta eso.</p><p>Espero que eso haya funcionado para ti. De lo contrario, es posible que deba verificar la configuración de Sanctum.</p><h2 id="hacer-solicitudes-autenticadas" tabindex="-1">Hacer solicitudes autenticadas <a class="header-anchor" href="#hacer-solicitudes-autenticadas" aria-label="Permalink to &quot;Hacer solicitudes autenticadas&quot;">​</a></h2><p>Así que hemos ordenado CSRF, ahora haremos una solicitud a <code>/api/users</code> para verificar que realmente estamos autenticados. Cree una solicitud para esto en Postman y agréguelo a su colección. Y por supuesto, enviar esa solicitud.</p><p><img src="'+h+'" alt="Unauthenticated"></p><p>Hmm, no autenticado.</p><p>Ahora, esto debería funcionar. Postman ha almacenado las cookies que obtuvimos al realizar la solicitud anterior a <code>/login</code> y las enviará junto con esta solicitud. Puede verificar esto haciendo click en el enlace de cookies en la parte superior derecha de su solicitud.</p><p><img src="'+u+`" alt="Cookies"></p><p>La razón por la que esto no funciona es que Sanctum está denegando la solicitud autenticada en función al <code>Referrer</code>.</p><p>Si está interesado en sumergirse en algún código de Sanctum y averiguar por qué, abra el middleware de <code>GuaranteeFrontendRequestsAreStateful</code> y compruebe el método <code>fromFrontend</code> por el que se canalizan todas las solicitudes.</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fromFrontend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($request)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $referer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">headers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;referer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $referer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $referer);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($referer, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sanctum.stateful&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [])) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sanctum.stateful&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, []), $referer);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>¡Está comprobando el <code>Referrer</code>!</p><p>Por el momento en Postman, esto no está bien configurado, así que agréguelo a su lista de encabezados y envíe la solicitud nuevamente.</p><p><img src="`+a+'" alt="Localhost port"></p><p>Y listo, una solicitud exitosa a un punto final autenticado.</p><p>Es mejor en este punto guardar su dominio en una variable de entorno en Postman. Si esto cambia y tiene muchos puntos finales, será una pesadilla actualizarlo.</p><p>Haga click en el engranaje en la parte superior derecha, seleccione su entorno y agregue manualmente su host.</p><p><img src="'+k+'" alt="Env name"></p><p>Una vez que haya guardado eso, cambie el valor del encabezado y envíe la solicitud nuevamente.</p><p><img src="'+a+'" alt="Users list"></p><p>Todavía funciona. Excelente.</p><p>Deberá agregar el encabezado <code>Referrer</code> a todas las solicitudes que realice a su API, si están protegidas con Sanctum. Sin embargo, eso no es demasiado problema.</p><h2 id="una-nota-rapida-sobre-otras-rutas-web" tabindex="-1">Una nota rápida sobre otras rutas web <a class="header-anchor" href="#una-nota-rapida-sobre-otras-rutas-web" aria-label="Permalink to &quot;Una nota rápida sobre otras rutas web&quot;">​</a></h2><p>Sanctum nos permite usar la ruta web normal <code>/login</code> para autenticarnos, pero eso no es todo. También podemos pulsar <code>/logout</code> para invalidar el valor de la cookie autenticada.</p><p>Para estas otras rutas web (también protegidas por CSRF), debe asegurarse de que también está enviando el token. Aquí hay un ejemplo rápido.</p><p><img src="'+g+'" alt="logout"></p><p>Mi solicitud para <code>/logout</code> fue exitosa porque estoy enviando el encabezado <code>X-XSRF-TOKEN</code>, al igual que lo hicimos para <code>/login</code>.</p>',62),y=[E];function F(v,b,f,C,q,_){return i(),e("div",null,y)}const A=s(m,[["render",F]]);export{P as __pageData,A as default};
